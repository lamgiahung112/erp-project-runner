services:
  nginx:
    container_name: nginx
    build:
      context: ..\erp-nginx
      dockerfile: .\nginx.dockerfile
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - user-service
  user-service:
    container_name: user-service
    build:
      context: ..\erp-user-service
      dockerfile: .\user-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      JWT_KEY: Tw0BcQe0StjzH0J+9jY23gyocYEcGbGTN6YRl0fWGmqEgJ1RiT8/LE49ZIpTnM8nTkfvHc7Sy9ZjefJJh7Pjsw==
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  postgres:
    container_name: postgres
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  redis:
    container_name: redis
    image: 'redis:7.2-alpine'
    ports:
      - "6379:6379"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    command: redis-server --save 20 1 --loglevel warning --requirepass redis
    volumes:
      - ./db-data/redis/data:/root/redis
      - ./db-data/redis/redis.conf:/usr/local/etc/redis/redis.conf